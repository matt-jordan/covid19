<!-- views/pages/us.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('../partials/head') %>
</head>

<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>

let dates;
let deaths;
let dailyDeaths;
let cases;
let dailyCases;
let chart;

function gatherData() {
    return $.ajax({
        url: "<%= data.config.url %>/v1/countries/US",
        headers: {
            // TODO: Don't do this.
            "Authorization": "Basic " + btoa("<%= data.config.credentials.name %>:<%= data.config.credentials.password %>")
        },
    }).then(function(data) {
        dates = data.items.map(function(value) {
            return value.date;
        });

        deaths = data.items.map(function(value) {
            return value.deaths;
        });
        dailyDeaths = data.items.map(function(value, index) {
            if (index === 0) {
                return value.deaths;
            }
            return value.deaths - data.items[index - 1].deaths;
        });

        cases = data.items.map(function(value) {
            return value.cases;
        });
        dailyCases = data.items.map(function(value, index) {
            if (index === 0) {
                return value.cases;
            }
            return value.cases - data.items[index - 1].cases;
        });
    });
}

function drawGraph() {
    const canvas = document.getElementById('usPlot');
    const ctx = canvas.getContext('2d');

    let cumulativeData;
    let dailyData;
    let selection;

    const optCases = document.getElementById('optCases');
    if (optCases.checked) {
        cumulativeData = cases;
        dailyData = dailyCases;
        selection = 'Cases';
    } else {
        cumulativeData = deaths;
        dailyData = dailyDeaths;
        selection = 'Deaths';
    }

    if (chart) {
        chart.destroy();
    }

    chart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: dates,
            datasets: [{
                label: `Cumulative ${selection}`,
                data: [...cumulativeData],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                ],
                borderWidth: 1,
                yAxisID: 'total'
            }, {
                label: `Daily ${selection}`,
                data: [...dailyData],
                backgroundColor: [
                    'rgba(99, 132, 255, 0.2)',
                ],
                borderColor: [
                    'rgba(99, 132, 255, 1)',
                ],
                borderWidth: 1,
                yAxisID: 'daily'
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    id: 'total',
                    position: 'left',
                    ticks: {
                        beginAtZero: true
                    }
                }, {
                    id: 'daily',
                    position: 'right',
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
}

function redrawGraph() {
    drawGraph();
}

function updateCounts() {
    let eTodayCases = document.getElementById("todayCases");
    let eYesterdayCases = document.getElementById("yesterdayCases");
    let eAvgCases = document.getElementById("avgCases");
    let eOverallCases = document.getElementById("overallCases");
    let eTodayDeaths = document.getElementById("todayDeaths");
    let eYesterdayDeaths = document.getElementById("yesterdayDeaths");
    let eAvgDeaths = document.getElementById("avgDeaths");
    let eOverallDeaths = document.getElementById("overallDeaths");

    const todayCases = dailyCases[dailyCases.length - 1];
    const yesterdayCases = dailyCases[dailyCases.length - 2];
    const avgCases = dailyCases
        .slice(dailyCases.length - 9, dailyCases.length - 2)
        .reduce((a, b) => a + b, 0) / 7;
    const todayDeaths = dailyDeaths[dailyDeaths.length - 1];
    const yesterdayDeaths = dailyDeaths[dailyDeaths.length - 2];
    const avgDeaths = dailyDeaths
        .slice(dailyDeaths.length - 9, dailyDeaths.length - 2)
        .reduce((a, b) => a + b, 0) / 7;

    eTodayCases.innerHTML = `${todayCases.toLocaleString()}`;
    eYesterdayCases.innerHTML = `${yesterdayCases.toLocaleString()}`;
    eAvgCases.innerHTML = `${Math.round(avgCases).toLocaleString()}`;
    eOverallCases.innerHTML = `${cases[cases.length - 1].toLocaleString()}`;
    eTodayDeaths.innerHTML = `${todayDeaths.toLocaleString()}`;
    eYesterdayDeaths.innerHTML = `${yesterdayDeaths.toLocaleString()}`;
    eAvgDeaths.innerHTML = `${Math.round(avgDeaths).toLocaleString()}`;
    eOverallDeaths.innerHTML = `${deaths[deaths.length - 1].toLocaleString()}`;
}

$( document ).ready(function() {
    gatherData().then(function() {
        drawGraph();
        updateCounts();
    });
});

</script>

<body class="container">

<header>
    <%- include('../partials/header') %>
</header>

<main>
    <div class="row">
        <div class="col-md-5">
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col"></th>
                            <th scope="col">Cases</th>
                            <th scope="col">Deaths</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <th scope="row">Overall</th>
                            <td id="overallCases"></td>
                            <td id="overallDeaths"></td>
                        </tr>
                        <tr>
                            <th scope="row">Today</th>
                            <td id="todayCases"></td>
                            <td id="todayDeaths"></td>
                        </tr>
                        <tr>
                            <th scope="row">Yesterday</th>
                            <td id="yesterdayCases"></td>
                            <td id="yesterdayDeaths"></td>
                        </tr>
                        <tr>
                            <th scope="row">7 Day Avg</th>
                            <td id="avgCases"></td>
                            <td id="avgDeaths"></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-md-7">
            <div class="row">
                <div class="col-md-8"></div>
                <div class="col-md-2">
                    <label>Cases
                        <input type="radio" id="optCases" name="chartData" value="cases" onclick="redrawGraph()" checked />
                    </label>
                </div>
                <div class="col-md-2">
                    <label>Deaths
                        <input type="radio" id="optDeaths" name="chartData" value="deaths" onclick="redrawGraph()" />
                    </label>
                </div>
            </div>
            <div class="row">
                <div class="jumbotron">
                    <canvas id="usPlot"></canvas>
                </div>
            </div>
        </div>
    </div>
</main>

<footer>
    <%- include('../partials/footer') %>
</footer>

</body>
</html>